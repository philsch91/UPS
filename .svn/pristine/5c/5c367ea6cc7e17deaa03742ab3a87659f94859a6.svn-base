using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;
using System.Net;
using System.Collections.Specialized;
using System.Web.Script.Serialization;
using System.Collections;

namespace UPS {
    /// <summary>
    /// Interaktionslogik für LoginWindow.xaml
    /// </summary>
    public partial class LoginWindow: Window {

        private CookieAwareWebClient webclient;
        
        public CookieAwareWebClient WebClient {
            get { return this.webclient; }
            set { this.webclient=value; }
        }

        public Dictionary<string,string> Settings { get; set; }

        public LoginWindow() {
            InitializeComponent();
        }

        private void buttonOK_Click(object sender, RoutedEventArgs e) {

            if(this.textBoxUser.Text.Length == 0 || this.passwordBox.Password.Length == 0) {
                MessageBox.Show("Invalid credentials", "Invalid Credentials", MessageBoxButton.OK, MessageBoxImage.Information);
                return;
            }

            //this.webclient = new CookieAwareWebClient();       //delete
            webclient.UseDefaultCredentials = true;

            NameValueCollection data = new NameValueCollection();
            data.Add("option", "credential");
            data.Add("loginButton2", "Login");
            data.Add("target", "https://projectsuite.aeat.allianz.at");
            data.Add("Ecom_User_ID", this.textBoxUser.Text.Trim());
            data.Add("Ecom_Password", this.passwordBox.Password);

            byte[] resp = webclient.UploadValues("https://apam0001.aeat.allianz.at/nidp/idff/sso?sid=0", data);

            /*
            string response = Encoding.ASCII.GetString(resp);
            MessageBox.Show("Response" + Environment.NewLine + response);
            */
            string cookieString;
            cookieString = "";
            foreach(Cookie c in webclient.ResponseCookies) {
                cookieString = cookieString + c.Name + "=" + c.Value + Environment.NewLine;
            }
            MessageBox.Show("Login Response Cookies" + Environment.NewLine + cookieString);
            
            /*
            string tst = "";
            foreach(string header in webclient.ResponseHeaders.AllKeys) {
                tst = tst + header;
            }
            MessageBox.Show(tst);*/

            string jSessionID = "";
            if(webclient.ResponseCookies["JSESSIONID"] != null) {
                jSessionID = webclient.ResponseCookies["JSESSIONID"].Name + "=" + webclient.ResponseCookies["JSESSIONID"].Value;
            }
            MessageBox.Show(jSessionID);
            webclient.Headers.Add(HttpRequestHeader.Cookie, jSessionID + ".LX-PWEB34");

            /*
            foreach(string h in webclient.Headers.AllKeys) { s = s + h; }
            MessageBox.Show("Headers" + Environment.NewLine + s);
            */

            string response = webclient.DownloadString("https://projectsuite.aeat.allianz.at/projectsuite/");
            //MessageBox.Show("Response" + Environment.NewLine + response);
            cookieString = "";
            string cookies;
            cookies = "";
            foreach(Cookie c in webclient.ResponseCookies) {
                cookieString = cookieString + c.Name + "=" + c.Value + Environment.NewLine;
                cookies = cookies + ";" + c.Name + "=" + c.Value;
            }
            //MessageBox.Show("Cookies" + Environment.NewLine + cookieString);
            webclient.Headers.Add(HttpRequestHeader.Cookie, cookies);

            webclient.Headers.Add(HttpRequestHeader.Cookie,
            ";allianzInternet=true"
                //+";NETMIND_SID=c55b08f4aa-28d01f60aa-9dd11b20aa-a041bb97aa-1499782306"
                //+ ";NETMIND_PERMSID=0e8303deaa-857c1ee1aa-cf715db1aa-4d4a910caa-1465800314"
            + ";allianzPortalView=https://portanova.aeat.allianz.at/portanova/portal/default"
                //+";LtpaToken=AAECAzU3NkE5MUEzNTc2QkUzMjNDTj1QaGlsaXBwIFNjaHVua2VyL09VPUdEL089QWxsaWFuei9DPUFUD1moXEgZfWVleJdiNV9yZIOgiwU="
            );

            //====debug====
            cookieString = "";
            foreach(string cookie in webclient.Headers.GetValues("Cookie")) {
                cookieString = cookieString + cookie;
            }
            MessageBox.Show("WebClient Cookies" + Environment.NewLine + cookieString);
            //====

            /*
            string headerString;
            headerString = "";
            foreach(string s in webclient.ResponseHeaders.AllKeys) {
                headerString = headerString + s + System.Environment.NewLine;
            }
            MessageBox.Show("Projectsuite Headers" + headerString);
             * */

            string ssoResponse = webclient.UploadString("https://projectsuite.aeat.allianz.at/projectsuite/rest/sso", "");
            JavaScriptSerializer serializer = new JavaScriptSerializer();
            Hashtable responseObject = serializer.Deserialize<Hashtable>(ssoResponse);
            //string userID = (string)responseObject["user"]["id"];
            
            //MessageBox.Show(responseObject.Count.ToString());

            Dictionary<string,object> user = (Dictionary<string,object>)responseObject["user"];
            string userID = user["id"].ToString();
            
            Dictionary<string,object> tenant = (Dictionary<string,object>)user["tenant"];
            string tenantName = tenant["name"].ToString();
            string tenantVal = tenant["value"].ToString();

            Dictionary<string, object> tokenObject = (Dictionary<string, object>)responseObject["token"];
            string token = tokenObject["token"].ToString().Trim();
            MessageBox.Show("userID: " + userID + System.Environment.NewLine +
                            "tenantName: " + tenantName + System.Environment.NewLine +
                            "tenantVal: " + tenantVal + System.Environment.NewLine +
                            "token: " + token + System.Environment.NewLine);
            
            this.Settings["userid"] = userID;
            this.Settings["tenantname"] = tenantName;
            this.Settings["tenantvalue"] = tenantVal;

            webclient.Headers.Add(HttpRequestHeader.ContentType, "application/json");
            //webclient.Headers.Add("X-Authorization", "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJBNDkzOCIsImlzcyI6IkFMTElBTlogQU1PUyBBQlMgQ09SRSIsImlhdCI6MTUwMDAzNjUwOX0.29l8cG88O2UXjVfwJac7Ax7ZsWkLPZY7gh5jASIJNnw");
            webclient.Headers.Add("X-Authorization", token);
            /*
            string auth = "";
            foreach(string a in webclient.Headers.GetValues("X-Authorization")) {
                auth = auth + a;
            }
            MessageBox.Show("WebClient Authorization" + Environment.NewLine + auth);*/

            /*MainWindow mw = (MainWindow)Application.Current.MainWindow;
            mw.webclient = webclient;*/
        }
    }
}
